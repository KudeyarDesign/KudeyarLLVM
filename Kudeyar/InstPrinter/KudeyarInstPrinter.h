//===-------- KudeyarInstPrinter.h ---------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
// Year: 2017
// Alexey Shistko     alexey@kudeyar.com
// Andrei Safronov    andrei@kudeyar.com
//===----------------------------------------------------------------------===//
#ifndef KUDEYARINSTPRINTER_H
#define KUDEYARINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
  class MCOperand;

  class KudeyarInstPrinter : public MCInstPrinter 
  {
  public:
    KudeyarInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                      const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

    virtual void printInst(const MCInst *MI, raw_ostream &O, StringRef Annot);

    // Autogenerated by tblgen.
    void printInstruction(const MCInst *MI, raw_ostream &O);
    static const char *getRegisterName(unsigned RegNo);

    void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                      const char *Modifier = 0);
    void printRegName(raw_ostream &OS, unsigned RegNo) const;
    void printMemOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O,
                            const char *Modifier = 0);
    void printPCRelImmOperand(const MCInst *MI, unsigned OpNo,
                                             raw_ostream &O); 
    void printRegisterList(const MCInst *MI, unsigned OpNum,
                                             raw_ostream &O);
    
  private:
    void printS12ImmOperand(const MCInst *MI, int OpNum, raw_ostream &O);

  };
}

#endif /* KUDEYARINSTPRINTER_H */
